{"version":3,"sources":["components/TodoItem.jsx","components/App.jsx","index.js"],"names":["TodoItem","props","onClick","onChecked","id","item","App","useState","text","setText","items","setItems","over","setOver","deleteItem","prevValue","filter","index","className","type","onChange","event","value","target","onMouseOver","onMouseOut","style","backgroundColor","map","key","ReactDOM","render","document","getElementById"],"mappings":"oKAceA,EAZE,SAACC,GAChB,OACE,yBACEC,QAAS,WACPD,EAAME,UAAUF,EAAMG,MAGxB,4BAAKH,EAAMI,QC4DFC,MAlEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAsBMC,EAAa,SAACV,GAClBO,GAAS,SAACI,GACR,OAAOA,EAAUC,QAAO,SAACX,EAAMY,GAC7B,OAAOA,GAASb,SAKtB,OACE,yBAAKc,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,yBAAKA,UAAU,QACb,2BAAOC,KAAK,OAAOC,SAlCJ,SAACC,GACpB,IAAQC,EAAUD,EAAME,OAAhBD,MACRb,EAAQa,IAgCuCA,MAAOd,IAClD,4BAAQN,QA9BM,WAClBS,GAAS,SAACI,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBP,OAExBC,EAAQ,MA2BF,0BACEe,YAzBS,WACjBX,GAAQ,IAyBAY,WAtBQ,WAChBZ,GAAQ,IAsBAa,MAAO,CAAEC,gBAAiBf,EAAO,UAAY,OAH/C,SASJ,6BACE,4BACGF,EAAMkB,KAAI,SAACvB,EAAMY,GAAP,OACT,kBAAC,EAAD,CACEY,IAAKZ,EACLZ,KAAMA,EACND,GAAIa,EACJd,UAAWW,WCxDzBgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fa969473.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TodoItem = (props) => {\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        props.onChecked(props.id);\r\n      }}\r\n    >\r\n      <li>{props.item}</li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n\r\n// import React from \"react\";\r\n\r\n// const TodoItem = (props) => {\r\n//   const [isDone, setIsDone] = React.useState(false);\r\n//   return (\r\n//     <div\r\n//       onClick={() => {\r\n//         setIsDone((prevValue) => {\r\n//           return !prevValue;\r\n//         });\r\n//       }}\r\n//     >\r\n//       <li style={{ textDecoration: isDone && \"line-through\" }}>{props.item}</li>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, { useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [over, setOver] = useState(false);\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n    setText(value);\n  };\n\n  const handleClick = () => {\n    setItems((prevValue) => {\n      return [...prevValue, text];\n    });\n    setText(\"\");\n  };\n\n  const handleOver = () => {\n    setOver(true);\n  };\n\n  const handleOut = () => {\n    setOver(false);\n  };\n\n  const deleteItem = (id) => {\n    setItems((prevValue) => {\n      return prevValue.filter((item, index) => {\n        return index != id;\n      });\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input type=\"text\" onChange={handleChange} value={text} />\n        <button onClick={handleClick}>\n          <span\n            onMouseOver={handleOver}\n            onMouseOut={handleOut}\n            style={{ backgroundColor: over ? \"#fdcb6e\" : null }}\n          >\n            Add\n          </span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {items.map((item, index) => (\n            <TodoItem\n              key={index}\n              item={item}\n              id={index}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n "],"sourceRoot":""}